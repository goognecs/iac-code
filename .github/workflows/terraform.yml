name: Cloud-IAC

on:
  push:
    branches: [master, main]
    paths:
      - 'terraform/**'
  pull_request:
    branches: [master, main]
    paths:
      - 'terraform/**'

env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_DEFAULT_REGION: us-east-1
  # verbosity setting for detailed Terraform logs
  TF_LOG: INFO

jobs:
  terraform:
    name: "Apply Terraform Code Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    
    steps:
      - name: "Checkout/Clone Source Code"
        uses: actions/checkout@v4
      
      - name: "Setting Up Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config "bucket=$BUCKET_TF_STATE"
        env:
          AWS_DEFAULT_REGION: us-east-1

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        env:
          AWS_DEFAULT_REGION: us-east-1
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        #To get github ref | RUN: git ls-remote
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile
